#!/usr/bin/env bash
#
# prepends jira case to commit message if not already present
#
# Script originally stolen from: https://stash.arbfund.com/projects/IMP/repos/scripts/browse/bash-scripts/git-helpers/prepare-commit-msg
#
# Expects branch name like
# feature/JIRAQUE-1234-branch-message
# JIRAQUE-1234-branch-message
# JIRAQUE-1234
#
# use `git commit -n` to bypass this script.
#
# ###### Set up Guide ######
# For Local:
# Either paste this file into your local repo .git/hooks/ folder, or apply it globally
#
# For global:
# Run commands (in git bash, terminal, something linux based)
# `mkdir -p ~/git/hooks/`
# `git config --global core.hooksPath ~/git/hooks/`
# Paste this file "prepare-commit-msg" into that folder

boldred="\033[1;31m"
green="\033[0;32m"
noformat="\033[0m"

# Make sure we aren't on a rebase branch
if [ "$(git branch | grep -c 'rebasing')" -ne 0 ]; then
  echo "prepare-commit-msg hook: Disabling prepare-commit-msg hook on rebase"
  exit 0
fi

commit_message_file=$1

read -r commit_message_line_one < "$commit_message_file"
case_in_commit=$(echo "$commit_message_line_one" | grep -E -o "^\w*-\d+" | head -1)
case_in_branch=$(git branch --show-current | grep -E -o '\w*-\d+' | head -1 | tr '[:lower:]' '[:upper:]')

if [[ -z $case_in_commit ]] && [[ -n $case_in_branch ]]; then
    # There is no case in the commit and it has a case in the branch
    echo -e "prepare-commit-msg hook: Prepending case number (${green}${case_in_branch}${noformat}) to commit message."
    sed -i '' "1s/^/$case_in_branch /" "$commit_message_file"
elif [[ -n $case_in_commit ]] && [[ -n $case_in_branch ]] && [[ $case_in_commit -ne $case_in_branch ]]; then
    # There is a case in the commit and it doesn't match the case in the branch
    # TODO ask if they really want to do this
    echo -e "prepare-commit-msg hook: ${boldred}WARNING:${noformat} Jira case in commit message (${green}${case_in_commit}${noformat}) doesn't match the Jira case in the branch (${green}${case_in_branch}${noformat})."
    echo -e "prepare-commit-msg hook: Use '${green}git commit --amend${noformat}' if this was a mistake."
elif [[ -n $case_in_commit ]] && [[ -z $case_in_branch ]]; then
    # There is a case in the commit and no case in the branch
    echo -e "prepare-commit-msg hook: ${boldred}WARNING:${noformat} No case found in the branch name.  Is the branch named correctly?"
fi

exit 0